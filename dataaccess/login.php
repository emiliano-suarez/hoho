<?php

namespace hoho\dataaccess;
use hoho\fwk\dataaccess as Fwk;


class DataAccess_Login
{



    //function gets real password from DB and compares it to provided one
    public static function isValid($params)
    {
    
      //  get the password hash stored in the database for this user
        $passwordHash = null;
        $passwordHash = DataAccess_Login::getPasswordHashbyUsername($params['username']);
      
       
        if ($passwordHash != null)
        {
            //compare it to the hash that would have been generated by that password
            $passwordAttempt = md5($params['password']);
            
            $isequal = strcmp($passwordHash, $passwordAttempt);
            
            
            //return true if entered password is valid, false otherwise
            if ($isequal == 0)
            {
                return true;
            }
            else 
            {
                return false;
            }
        }
        else
        {
            return false;
        }
        
        return true;
    
    
    }

  public static function getUserByEmail($emailAddress)
  {
      $dbConnection = Fwk\dbConnProvider::getConnection("SITE_READ");
      
      $sql = "SELECT 
                  u.id,u.first_name,u.last_name,u.password 
              FROM 
                  users u
                  INNER JOIN user_emails ue ON ue.user_id = u.id AND ue.is_default = 1 
                  INNER JOIN emails e ON e.id = ue.email_id
              WHERE
                  e.email = ?; ";
  
      $parameters = new Fwk\dbParameters();
      $parameters->addParameter("STRING", $emailAddress);
  
      $value = $dbConnection->executeQuery($sql, $parameters);

      return $value;
  }
    
    //function gets user data from email address
    public static function old_getUserByEmail($emailAddress)
    {
        
        $dbConnection = Fwk\dbConnProvider::getConnection("SITE_READ");
        
        $sql = "SELECT id,first_name,last_name,password 
            	FROM users
                WHERE
                email = ?  and status='Active'";
                
        
      $parameters = new Fwk\dbParameters();
      $parameters->addParameter("STRING", $emailAddress);
      
      
      $value = $dbConnection->executeQuery($sql, $parameters);
      return $value;
    }
    
    
    //function gets real password from DB given username
    public static function getPasswordHashByUsername($username)
    {
        
        $dbConnection = Fwk\dbConnProvider::getConnection("SITE_READ");
        
        $sql = "SELECT au_password_hash
            	FROM admin_user
                WHERE
                au_username = ?";
                
        
      $parameters = new Fwk\dbParameters();
      $parameters->addParameter("STRING", $username);
      
      
      $value = $dbConnection->executeQuery($sql, $parameters);
      return $value[0]['AU_PASSWORD_HASH']  ;
    }
    
    public static function setLastLoginNow($username)
    {
      $dbConnection = Fwk\dbConnProvider::getConnection("SITE_WRITE");
      
      $sql = "UPDATE admin_user SET au_last_login = NOW() WHERE au_username = ?;";
  
      $parameters = new Fwk\dbParameters();
      $parameters->addParameter("STRING", $username);
  
      $value = $dbConnection->execute($sql, $parameters);

      return $value;
    }

    //function gets ID from given username
    public static function getAdminIdFromUserName($username)
    {
        
        $dbConnection = Fwk\dbConnProvider::getConnection("SITE_READ");
        
        $sql = "SELECT au_id
            FROM admin_user
                WHERE
                au_username = ?";
                
        
      $parameters = new Fwk\dbParameters();
      $parameters->addParameter("STRING", $username);
      
      
      $value = $dbConnection->executeQuery($sql, $parameters);
      return $value[0]['AU_ID']  ;
    }
    
    
    
}

?>